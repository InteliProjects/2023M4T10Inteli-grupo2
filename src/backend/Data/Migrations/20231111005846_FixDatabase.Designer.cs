// <auto-generated />
using System;
using BackendECOTVOS.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BackendECOTVOS.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231111005846_FixDatabase")]
    partial class FixDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.Logistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Front")
                        .HasColumnType("text");

                    b.Property<int>("OperatorId")
                        .HasColumnType("integer");

                    b.Property<int>("VehicleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OperatorId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Logistics");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Assigned")
                        .HasColumnType("boolean");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.MaterialAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<int>("VehicleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Material_Assignments");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BeginHour")
                        .HasColumnType("timestamp without time zone");

                    b.Property<TimeOnly?>("Duration")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("EstimatedDuration")
                        .HasColumnType("time without time zone");

                    b.Property<int>("RequesterLogisticId")
                        .HasColumnType("integer");

                    b.Property<int>("ResponsibleLogisticId")
                        .HasColumnType("integer");

                    b.Property<char>("Status")
                        .HasColumnType("character(1)");

                    b.Property<char>("Type")
                        .HasColumnType("character(1)");

                    b.HasKey("Id");

                    b.HasIndex("RequesterLogisticId");

                    b.HasIndex("ResponsibleLogisticId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.OperationMaterials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AssociatedMaterialId")
                        .HasColumnType("integer");

                    b.Property<bool>("Defective")
                        .HasColumnType("boolean");

                    b.Property<int>("OperationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedMaterialId");

                    b.HasIndex("OperationId");

                    b.ToTable("Operation_Materials");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.Operator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Operators");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.SupportTruckMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<int>("VehicleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Support_Truck_Materials");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<char>("Type")
                        .HasColumnType("character(1)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.Logistic", b =>
                {
                    b.HasOne("BackendECOTVOS.Domain.Entities.Operator", "Operator")
                        .WithMany("Logistics")
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendECOTVOS.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("Logistics")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operator");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.MaterialAssignment", b =>
                {
                    b.HasOne("BackendECOTVOS.Domain.Entities.Material", "Material")
                        .WithMany("Assignments")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendECOTVOS.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("Assignments")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.Operation", b =>
                {
                    b.HasOne("BackendECOTVOS.Domain.Entities.Logistic", "RequesterLogistic")
                        .WithMany()
                        .HasForeignKey("RequesterLogisticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendECOTVOS.Domain.Entities.Logistic", "ResponsibleLogistic")
                        .WithMany()
                        .HasForeignKey("ResponsibleLogisticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequesterLogistic");

                    b.Navigation("ResponsibleLogistic");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.OperationMaterials", b =>
                {
                    b.HasOne("BackendECOTVOS.Domain.Entities.Material", "Material")
                        .WithMany("OperationMaterials")
                        .HasForeignKey("AssociatedMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendECOTVOS.Domain.Entities.Operation", "Operation")
                        .WithMany("OperationMaterials")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.SupportTruckMaterial", b =>
                {
                    b.HasOne("BackendECOTVOS.Domain.Entities.Material", "Material")
                        .WithMany("SupportTruckMaterials")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendECOTVOS.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("SupportTruckMaterial")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.Material", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("OperationMaterials");

                    b.Navigation("SupportTruckMaterials");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.Operation", b =>
                {
                    b.Navigation("OperationMaterials");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.Operator", b =>
                {
                    b.Navigation("Logistics");
                });

            modelBuilder.Entity("BackendECOTVOS.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Logistics");

                    b.Navigation("SupportTruckMaterial");
                });
#pragma warning restore 612, 618
        }
    }
}
